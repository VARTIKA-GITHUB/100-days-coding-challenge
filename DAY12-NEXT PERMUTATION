DAY12-NEXT PERMUTATION
class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int n = nums.size();
        int k = -1;

        // Step 1: find the dip
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                k = i;
                break;
            }
        }

        // Step 2: if dip found, swap with just larger
        if (k != -1) {
            for (int j = n - 1; j > k; j--) {
                if (nums[j] > nums[k]) {
                    swap(nums[j], nums[k]);
                    break;
                }
            }
        }

        // Step 3: reverse suffix (or whole array if k == -1)
        reverse(nums.begin() + k + 1, nums.end());
    }
};
